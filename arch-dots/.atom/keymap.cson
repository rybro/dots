# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'atom-workspace atom-text-editor:not([mini])':
  'ctrl-j': 'unset!'
 'atom-workspace atom-text-editor':
  'ctrl-l': 'unset!'
'atom-text-editor':
  'ctrl-;': 'editor:move-to-end-of-screen-line'
  'ctrl-n': 'editor:move-to-end-of-word'
  'ctrl-m': 'editor:move-to-beginning-of-word'
  'ctrl-i': 'core:move-up'
  'ctrl-k': 'core:move-down'
  'ctrl-l': 'core:move-right'
  'ctrl-j': 'core:move-left'
  'ctrl-y': 'editor:select-line'
'.platform-win32 atom-text-editor, .platform-linux atom-text-editor':
  'ctrl-shift-f': 'find-and-replace:select-all'
'body':
  'ctrl-i': 'core:move-up'
  'ctrl-k': 'core:move-down'
  'ctrl-l': 'core:move-right'
  'ctrl-j': 'core:move-left'
